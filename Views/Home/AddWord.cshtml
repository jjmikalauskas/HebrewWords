@model Hebrew1.Models.ViewModels.WordsVM

@{
    ViewBag.Title = "Add Word";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Word</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Input your word with associated fields and then press Save Word</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="Meaning">Hebrew Word</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.HebrewWord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HebrewWord, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cuniform, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cuniform, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cuniform, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Meaning">Cuniform Image</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CuniformImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CuniformImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phonetic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phonetic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phonetic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Meaning, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Meaning, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Meaning, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Meaning">Related Words</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.RelatedWords, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelatedWords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Word" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Words", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
